generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


enum UserRole {
  SUPERADMIN
  ADMIN
  USER
}

model User {
  @@map("users")
  id                     Int      @id @default(autoincrement())
  uid                    String   @unique @default(uuid())
  email                  String   @unique
  name                   String
  password               String
  avatar                 String   @default("https://initiate.alphacoders.com/images/879/cropped-1920-1200-879280.jpg?711")
  isActivated            Boolean  @default(false)
  role                   UserRole @default(USER)
  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt
  isDeleted              Boolean  @default(false)
  accountActivationToken String
  activationExpiryDate   DateTime @default(now())  
}

model Category{
  @@map("categories")
  id                        Int         @id @default(autoincrement())
  uid                       String      @unique @default(uuid())
  name                      String      @unique
  description               String?      
  iconName                  String      
  imageUrl                  String      @default("https://initiate.alphacoders.com/images/879/cropped-1920-1200-879280.jpg?711")
  totalProducts             Int         @default(0)
  totalSubCategories        Int         @default(0)
  subCategories             SubCategory[]
  products                  Product[]
  createdAt                 DateTime    @default(now())
  updatedAt                 DateTime    @updatedAt
  isDeleted                 Boolean     @default(false)
}

model SubCategory{
  @@map("subcategories")
  id                        Int         @id @default(autoincrement())
  uid                       String      @unique @default(uuid())
  name                      String      @unique
  description               String?      
  iconName                  String?      
  category                  Category    @relation(fields: [categoryId], references:[id])
  categoryId                Int
  products                  Product[]
  createdAt                 DateTime    @default(now())
  updatedAt                 DateTime    @updatedAt
  isDeleted                 Boolean     @default(false)
}

model Product{
  @@map("products")
  id                        Int         @id @default(autoincrement())
  uid                       String      @unique @default(uuid())
  slug                      String      @unique()
  name                      String      
  description               String
  editorDescription         String?
  price                     Float
  subCategory               SubCategory?    @relation(fields: [subCategoryId], references:[id])
  subCategoryId             Int?
  category                  Category    @relation(fields: [categoryId], references:[id])
  categoryId                Int
  categoryName              String
  subCategoryName           String?
  images                    Images[]
}

model Images{
  @@map("images")

  id                        Int         @id @default(autoincrement())
  productId                 Int
  product                   Product    @relation(fields: [productId], references:[id])
  imageUrl                  String
}